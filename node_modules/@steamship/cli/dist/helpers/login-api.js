import got from 'got';
import { POLL_LOGIN_ATTEMPT, POLL_LOGIN_FREQUENCY, REQUEST_LOGIN_ATTEMPT_TOKEN } from './constants.js';
export async function initiateLoginFlow(engine_domain) {
    const url = `${engine_domain}${REQUEST_LOGIN_ATTEMPT_TOKEN}`;
    try {
        const { data } = (await got.post(url).json());
        if (data.token === undefined) {
            throw Error('Failed to get login token');
        }
        return data.token;
    }
    catch (e) {
        throw Error(`Failed to get login token: ${e.message}`);
    }
}
export async function pollLoginAttempt(domain, token) {
    const url = `${domain}${POLL_LOGIN_ATTEMPT}`;
    while (true) {
        try {
            const { data } = (await got.post(url, { json: { token: token } }).json());
            if (data.status === 'done') {
                return {
                    api_key: data.apiKey,
                    handle: data.handle,
                    expiry_time: data.expiryTime
                };
            }
        }
        catch (e) {
            const error = JSON.parse(e.response.body).error.message;
            throw Error(`Failed to login: ${error}`);
        }
        await new Promise((resolve) => {
            setTimeout(resolve, POLL_LOGIN_FREQUENCY);
        });
    }
}
