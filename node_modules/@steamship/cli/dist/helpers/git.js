import { execSync } from 'child_process';
import * as path from 'path';
import { CliUx } from '@oclif/core';
import * as rimraf from 'rimraf';
function isInGitRepository() {
    try {
        execSync('git rev-parse --is-inside-work-tree', { stdio: 'ignore' });
        return true;
    }
    catch (_) {
        return false;
    }
}
function isInMercurialRepository() {
    try {
        execSync('hg --cwd . root', { stdio: 'ignore' });
        return true;
    }
    catch (_) {
        return false;
    }
}
export function tryGitInitInDir(appDirectory) {
    let didInit = false;
    try {
        execSync('git --version', { stdio: 'ignore', cwd: appDirectory });
        if (isInGitRepository() || isInMercurialRepository()) {
            return false;
        }
        execSync('git init', { stdio: 'ignore', cwd: appDirectory });
        didInit = true;
        execSync('git checkout -b main', { stdio: 'ignore', cwd: appDirectory });
        execSync('git add -A', { stdio: 'ignore', cwd: appDirectory });
        execSync('git commit -m "Initial commit from Create Steamship Package"', {
            stdio: 'ignore',
            cwd: appDirectory
        });
        return true;
    }
    catch (e) {
        CliUx.ux.warn(`Error setting up git repository: ${e}`);
        if (didInit) {
            try {
                rimraf.sync(path.join(process.cwd(), '.git'));
            }
            catch (ex) {
                CliUx.ux.warn(`Error cleaning half-created git repository: ${ex}`);
            }
        }
        return false;
    }
}
