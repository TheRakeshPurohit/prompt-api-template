import { PluginTransport, PluginType, TrainingPlatform } from '@steamship/client';
export declare const PROJECT_FILE = "steamship.json";
export declare const README_FILE = "README.md";
export type ProjectPlatform = 'linux' | 'local';
export type ProjectType = 'package' | 'plugin' | 'project' | 'instance' | 'version' | 'workspace';
export interface IPluginConfiguration {
    transport?: PluginTransport;
    type?: PluginType;
    isTrainable?: boolean;
    trainingPlatform?: TrainingPlatform;
}
export interface IConfiguration {
    type?: ProjectType;
    name?: string;
    handle?: string;
    version?: string;
    description?: string;
    author?: string;
    public?: boolean;
    platform?: ProjectPlatform;
    entrypoint?: string;
    plugin?: IPluginConfiguration;
    input_folder: string;
    build_config: {
        ignore: Array<string>;
    };
    configTemplate?: Record<string, Record<string, any>>;
}
export declare function projectFilePath(folder?: string): string;
export declare function readmeFilePath(folder?: string): string;
export declare function requirePackageConfigOrExit(): Promise<void>;
export declare function loadProjectFile(folder?: string): IConfiguration;
export declare function loadReadmeFile(folder?: string): string;
export declare function saveConfiguration(configuration: IConfiguration, folder?: string): void;
export declare function postCreateConfigSetup(folder: string, packageName: string): Promise<void>;
