import { Command, Flags } from '@oclif/core';
import { PluginInstance, Steamship } from '@steamship/client';
import { deleteObject } from '../../../helpers/delete-object.js';
import { getConfiguration } from '../../../wizards/get-config.js';
import { getPluginInstance } from '../../../wizards/get-plugin-instance.js';
import { getPlugin } from '../../../wizards/get-plugin.js';
import { getWorkspace } from '../../../wizards/get-workspace.js';
export default class Delete extends Command {
    static description = 'Delete a plugin Instance.';
    static examples = [
        'ship plugin:instance:delete',
        'ship plugin:instance:delete --instance <instanceHandle>',
        'ship plugin:instance:delete --plugin <packageHandle> --instance <instanceHandle>'
    ];
    static flags = {
        plugin: Flags.string({ char: 'p', description: 'the Plugin handle' }),
        instance: Flags.string({ char: 'i', description: 'the Plugin Instance handle' }),
        space: Flags.string({ char: 's', description: 'the Workspace handle' })
    };
    static args = [];
    async run() {
        const { args, flags } = await this.parse(Delete);
        const client = new Steamship();
        const config = await getConfiguration({});
        const plugin = (await getPlugin({ client, config, providedHandle: flags.plugin }));
        const workspace = (await getWorkspace({ client, config, providedHandle: flags.space }));
        const instance = (await getPluginInstance({
            client,
            config,
            plugin,
            providedHandle: flags.instance
        }));
        await deleteObject(PluginInstance, { id: instance.id, pluginHandle: plugin.handle }, 'Plugin Instance');
    }
}
