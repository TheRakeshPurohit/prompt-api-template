import { CliUx, Command, Flags } from '@oclif/core';
import { Plugin } from '@steamship/client';
import { getAuthedClient } from '../../helpers/get-client.js';
import { showTable } from '../../helpers/show-table.js';
function toList(d) {
    return [d.handle || '', d.type || '', `${d.isPublic}` || '', d.description || ''];
}
export default class List extends Command {
    static description = 'Lists your plugins.';
    static examples = ['ship plugin:list', 'ship plugin:list --mine'];
    static flags = {
        mine: Flags.boolean({ char: 'm', description: `List your own plugins.`, required: false })
    };
    static args = [];
    async run() {
        const { args, flags } = await this.parse(List);
        const client = await getAuthedClient();
        const request = await Plugin.list(client, { public: !flags.mine });
        if (!request.output) {
            CliUx.ux.error('Could not retrieve plugin list from Steamship.');
        }
        const plugins = request.output?.plugins;
        if (!plugins || plugins.length == 0) {
            CliUx.ux.info("You don't have any plugins yet.");
            CliUx.ux.exit();
        }
        showTable({
            title: flags.mine === true ? 'My Plugins' : 'Plugins',
            headers: ['Handle', 'Type', 'Public?', 'Description'],
            data: plugins.map(toList)
        });
    }
}
