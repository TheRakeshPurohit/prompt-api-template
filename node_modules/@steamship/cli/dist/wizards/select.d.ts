export interface ISelectParams {
    url?: string;
    tree?: IChoiceTree;
    choices?: IChoice[];
    preSelected?: string;
    requirePreselect?: boolean;
    limitOptions?: string[];
    recurse?: boolean;
    limitToPropertyNotNull?: string;
    prompt?: string;
}
export interface IDemo {
    type: 'jupyter' | 'web';
    url: string;
    language?: 'python' | 'http' | 'typescript';
}
export interface IChoice {
    id?: string;
    name?: string;
    description?: string;
    url?: string;
    choices?: IChoiceTree;
    choicesUrl?: string;
    demos?: IDemo[];
}
export interface IChoiceTree {
    prompt: string;
    choices: IChoice[];
}
export declare const STARTER_PACKAGE_LIST = "https://raw.githubusercontent.com/steamship-packages/awesome-steamship-packages/main/packages.json";
export declare const STARTER_PLUGIN_LIST = "https://raw.githubusercontent.com/steamship-plugins/awesome-steamship-plugins/main/plugins.json";
export declare const ProjectChoiceTree: IChoiceTree;
export declare function inquire(prompt: string, choices: IChoice[]): Promise<IChoice>;
export declare function select(params: ISelectParams): Promise<IChoice>;
export declare function selectFromJson(params: ISelectParams): Promise<IChoice>;
export declare function selectFromUrl(params: ISelectParams): Promise<IChoice>;
export declare function selectProject(params: ISelectParams): Promise<IChoice>;
